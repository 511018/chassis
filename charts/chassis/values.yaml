# Default values for chassis.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#proxySettings:
#  enabled: false
#  http_proxy: ""
#  https_proxy: ""
#  no_proxy: ""

storage:
  # Valid values are "pv", "s3", "gs"
  provider: pv
  # This secret should contain keys that match the environment variables that are expected for
  # each provider's standard SDK.
  credentialsSecretName: ""
  bucketName: ""
  # The following options are only used when "provider" == "pv"
  hostPath: "/mnt/data"
  size: 10Gi

# (Optional) If connecting to a Modzy instance, provide the following info.
modzy:
  url: ""

registry:
  # The base URL to the destination registry that Chassis will push final
  url: ""
  # The name of a Kubernetes secret of type "dockerconfigjson"
  credentialsSecretName: ""

replicaCount: 1

image:
  repository: ghcr.io/modzy/chassis-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
#  capabilities:
#    drop:
#      - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chassis.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chassis-tls
  #    hosts:
  #      - chassis.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
